/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2020-05-20 11:46:00 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import repositories.ConturiRepository;
import servlets.UserServlet;
import repositories.UserRepository;

public final class home_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Home</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\" integrity=\"sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T\" crossorigin=\"anonymous\">\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("    body {\r\n");
      out.write("\r\n");
      out.write("        background-image: url('background1.jpg');\r\n");
      out.write("        background-repeat: no-repeat;\r\n");
      out.write("        background-attachment: fixed;\r\n");
      out.write("        background-size: cover;\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<form align=\"left\" method=\"post\" action=\"/home\">\r\n");
      out.write("    <input type=\"submit\" class=\"btn btn-danger\" name=\"buton\" value=\"Imprieteneste-te!\"><br>\r\n");
      out.write("    <input type=\"submit\" class=\"btn btn-danger\" name=\"buton\" value=\"Trimite email\"><br>\r\n");
      out.write("    <input type=\"submit\" class=\"btn btn-danger\" name=\"buton\" value=\"Inbox\"><br>\r\n");
      out.write("    <input type=\"submit\" class=\"btn btn-danger\" name=\"buton\" value=\"Sent\"><br>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");

    List<String> user = UserRepository.findUser();
    out.print("<h2 align=\"right\">" + user.get(0) + " " + user.get(1) + "  </h2>");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<form align=\"right\" method=\"post\" action=\"/home\">\r\n");
      out.write("    <input type=\"submit\" class=\"btn btn-primary\" name=\"buton\" value=\"Rapoarte\"><br>\r\n");
      out.write("    <input type=\"submit\" class=\"btn btn-primary\" name=\"buton\" value=\"Conturi\"><br>\r\n");
      out.write("    <input type=\"submit\" class=\"btn btn-primary\" name=\"buton\" value=\"Stergere user\"><br>\r\n");
      out.write("    <input type=\"submit\" class=\"btn btn-primary\" name=\"buton\" value=\"Log out\"><br>\r\n");
      out.write("</form>\r\n");
      out.write("\r\n");
      out.write("<p align=\"center\">\r\n");
      out.write("    ");

        if (request.getAttribute("deleteUser") != null) {
            List<String> conturi = (List<String>) request.getAttribute("deleteUser");
            out.print("Conturile dvs. sunt: " + conturi + "<br> Sunteti sigur ca doriti sa stergeti userul?<br>");
            out.print("<form align=\"center\" method=\"post\" action=\"/home\">\n" +
                    "    <input type=\"submit\" class=\"btn btn-dark\" name=\"buton\" value=\"Accept\">\n" +
                    "    <input type=\"submit\" class=\"btn btn-dark\" name=\"buton\" value=\"Cancel\">\n" +
                    "</form>");
        }
        if(request.getAttribute("delete") != null) {
            System.out.println("deleteuser");
            List<String> conturi = ConturiRepository.afisareConturi();
            for(String cont : conturi) {
                System.out.println(cont);
                UserServlet.setUsernameCurent(cont);
                ConturiRepository.delete(cont);
            }
            ConturiRepository.deleteUser();
            UserServlet.setIdCurent(0);

            request.getRequestDispatcher("firstpage.jsp").forward(request, response);
        }
    
      out.write("\r\n");
      out.write("</p>\r\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.3.1.slim.min.js\" integrity=\"sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js\" integrity=\"sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("<script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\" integrity=\"sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
